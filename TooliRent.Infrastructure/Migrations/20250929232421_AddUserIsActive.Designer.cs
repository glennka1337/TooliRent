// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TooliRent.Infrastructure.Data;

#nullable disable

namespace TooliRent.Infrastructure.Migrations
{
    [DbContext(typeof(TooliRentDbContext))]
    [Migration("20250929232421_AddUserIsActive")]
    partial class AddUserIsActive
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TooliRent.Core.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("ToolId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToolId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedUtc = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndDate = new DateTime(2025, 1, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 1,
                            ToolId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedUtc = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            EndDate = new DateTime(2025, 1, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 0,
                            ToolId = 4,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TooliRent.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pro"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Garden"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Safety"
                        });
                });

            modelBuilder.Entity("TooliRent.Core.Models.Tool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Tools");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Description = "Kraftfull slagborr 18V",
                            IsActive = true,
                            Name = "Slagborr"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Kompakt skruvdragare",
                            IsActive = true,
                            Name = "Skruvdragare"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Batteridriven grästrimmer",
                            IsActive = true,
                            Name = "Grästrimmer"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "EN397 klassad hjälm",
                            IsActive = true,
                            Name = "Skyddshjälm"
                        });
                });

            modelBuilder.Entity("TooliRent.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Password = "$2a$10$LhTj3eQpC1Jp8wQvJfUeP.HO541xgs9LN7AyAcwzF2ioOs1Vh6xoG",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Password = "$2a$10$7stg7wY0IY5Q39I2nq3eIee5rT1Er9YXrVjuVjYIYAgq9rK2Vy6s.",
                            Role = "Member",
                            Username = "member"
                        });
                });

            modelBuilder.Entity("TooliRent.Core.Models.Booking", b =>
                {
                    b.HasOne("TooliRent.Core.Models.Tool", "Tool")
                        .WithMany("Bookings")
                        .HasForeignKey("ToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TooliRent.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tool");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TooliRent.Core.Models.Tool", b =>
                {
                    b.HasOne("TooliRent.Core.Models.Category", "Category")
                        .WithMany("Tools")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TooliRent.Core.Models.Category", b =>
                {
                    b.Navigation("Tools");
                });

            modelBuilder.Entity("TooliRent.Core.Models.Tool", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
